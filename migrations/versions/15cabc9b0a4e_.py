"""empty message

Revision ID: 15cabc9b0a4e
Revises: 
Create Date: 2018-04-16 20:53:30.061850

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '15cabc9b0a4e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addon',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.Column('cost', sa.Float(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('role',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.Column('computers_limit', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    op.create_table('computer',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('mask', sa.String(length=256), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('mask')
    )
    op.create_table('license',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('addon_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['addon_id'], ['addon.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('role_user',
    sa.Column('role_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('role_user')
    op.drop_table('license')
    op.drop_table('computer')
    op.drop_table('user_')
    op.drop_table('role')
    op.drop_table('addon')
    # ### end Alembic commands ###
